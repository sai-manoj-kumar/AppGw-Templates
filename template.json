{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "addressPrefix": {
            "type": "string",
            "defaultValue": "10.0.0.0/16",
            "metadata": {
                "description": "Address prefix for the Virtual Network"
            }
        },
        "subnetPrefix": {
            "type": "string",
            "defaultValue": "10.0.0.0/28",
            "metadata": {
                "description": "Subnet prefix"
            }
        },
        "skuName": {
            "type": "string",
            "defaultValue": "Standard_Medium",
            "metadata": {
                "description": "Sku Name"
            }
        },
        "backendIpAddress1": {
            "type": "string",
            "metadata": {
                "description": "IP Address for Backend Server 1"
            }
        },
        "MSIVersion": {
            "type": "string",
            "defaultValue": "2015-08-31-PREVIEW",
            "metadata": {
                "description": "API version for msi extension"
            }
        },
        "MSIPort": {
            "type": "int",
            "defaultValue": 50342,
            "metadata": {
                "description": "Default port for msi extension"
            }
        },
        "KeyVaultVersion": {
            "type": "string",
            "defaultValue": "2018-02-14-preview",
            "metadata": {
                "description": "API version for key vault resources and access policy resources"
            }
        },
        "Secrets": {
            "type": "array",
            "metadata": {
                "description": "An array of json objects like this : {'name':name, 'value':value}"
            }
        }
    },
    "variables": {
        "applicationGatewayName": "[concat(resourceGroup().name, '-appgw')]",
        "idName" : "identity",
        "keyVaultName": "[concat(resourceGroup().name, '-kv')]",
        "publicIPAddressName": "[concat(resourceGroup().name, '-publicIp')]",
        "virtualNetworkName": "[concat(resourceGroup().name, '-vnet')]",
        "subnetName": "subnet1",
        "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
        "subnetRef": "[concat(variables('vnetID' ),'/subnets/',variables('subnetName'))]",
        "publicIPRef": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]",
        "applicationGatewayID": "[resourceId('Microsoft.Network/applicationGateways',variables('applicationGatewayName'))]",
        "apiVersion": "2018-08-01",
        "apiVersion10": "2018-08-01",
        "identityID": "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities',variables('idName'))]",
        "keyVaultID": "[resourceId('Microsoft.KeyVault/vaults',variables('keyVaultName'))]",
        "nsgName": "[concat(resourceGroup().name, '-vmssnsg')]"
    },
    "resources": [
        {
            "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
            "name": "[variables('idName')]",
            "apiVersion": "2015-08-31-PREVIEW",
            "location": "[resourceGroup().location]"
        },
        {
            "type": "Microsoft.KeyVault/vaults",
            "name": "[variables('keyVaultName')]",
            "apiVersion": "[parameters('KeyVaultVersion')]",
            "location": "[resourceGroup().location]",
            "properties": {
              "sku": {
                "name": "standard",
                "family": "A"
              },
              "tenantId": "72f988bf-86f1-41af-91ab-2d7cd011db47",
              "accessPolicies": [],
              "enableSoftDelete":true
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults/secrets",
            "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))]"
            ],
            "apiVersion": "[parameters('KeyVaultVersion')]",
            "copy": {
                "name": "secretcopy",
                "count": "[length(parameters('Secrets'))]"
            },
            "name": "[concat(variables('keyVaultName'), '/', parameters('Secrets')[copyIndex()].name)]",
            "properties": {
                "value": "[parameters('Secrets')[copyIndex()].value]",
                "recoveryLevel": "Purgeable"
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults/accessPolicies",
            "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))]"
            ],
            "name": "[concat(variables('KeyVaultName'), '/add')]",
            "apiVersion": "[parameters('KeyVaultVersion')]",
            "properties": {
                "accessPolicies": [
                    {
                        "tenantId": "[reference(variables('identityID'), parameters('MSIVersion')).tenantId]",
                        "objectId": "[reference(variables('identityID'), parameters('MSIVersion')).principalId]",
                        "permissions": {
                            "keys": [
                                "all"
                            ],
                            "secrets": [
                                "all"
                            ]
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "[variables('apiVersion')]",
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[variables('publicIPAddressName')]",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "Standard"
            },
            "properties": {
                "publicIPAllocationMethod": "Static"
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[variables('nsgName')]",
            "apiVersion": "2018-01-01",
            "location": "[resourceGroup().location]",
            "properties": {
                "securityRules": [
                    {
                        "name": "Port_APPGW",
                        "properties": {
                            "direction": "Inbound",
                            "sourceAddressPrefix": "*",
                            "sourcePortRange": "*",
                            "protocol": "*",
                            "destinationAddressPrefix": "*",
                            "destinationPortRanges": [
                                "22",
                                "80",
                                "443"
                            ],
                            "access": "Allow",
                            "priority": 100
                        }
                    },
                    {
                        "name": "Port_ManagementPorts",
                        "properties": {
                            "direction": "Inbound",
                            "sourceAddressPrefix": "*",
                            "sourcePortRange": "*",
                            "protocol": "*",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "65200-65535",
                            "access": "Allow",
                            "priority": 101
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "[variables('apiVersion')]",
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[variables('virtualNetworkName')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Network/networkSecurityGroups/', variables('nsgName'))]"
            ],
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[parameters('addressPrefix')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('subnetName')]",
                        "properties": {
                            "addressPrefix": "[parameters('subnetPrefix')]",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName'))]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "[variables('apiVersion10')]",
            "name": "[variables('applicationGatewayName')]",
            "type": "Microsoft.Network/applicationGateways",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
                "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
                "[concat('Microsoft.KeyVault/vaults/', variables('keyVaultName'))]"
            ],
            "identity": {
                "type": "UserAssigned",
                "identityIds":[
                    "[variables('identityID')]"
                ]
            },
            "properties": {
              "sku": {
                "name": "[parameters('skuName')]",
                "tier": "Standard_v2",
                "capacity":  2
                
              },
              
                "sslCertificates": [
                    {
                        "name": "appGatewaySslCert",
                        "properties": {
                            "keyVaultSecretId": "[concat(reference(variables('keyVaultID')).vaultUri,'secrets/sslcert')]"
                        }
                    }
                ],
                "gatewayIPConfigurations": [
                    {
                        "name": "appGatewayIpConfig",
                        "properties": {
                            "subnet": {
                                "id": "[variables('subnetRef')]"
                            }
                        }
                    }
                ],
                "frontendIPConfigurations": [
                    {
                        "name": "appGatewayFrontendIP",
                        "properties": {
                            "PublicIPAddress": {
                                "id": "[variables('publicIPRef')]"
                            }
                        }
                    }
                ],
                "frontendPorts": [
                  {
                    "name": "appGatewayFrontendPort1",
                    "properties": {
                      "Port": 443
                    }
                  },
                  {
                        "name": "appGatewayFrontendPort2",
                        "properties": {
                          "Port": 80
                        }
                    }
                ],
                "backendAddressPools": [
                    {
                        "name": "appGatewayBackendPool",
                        "properties": {
                            "BackendAddresses": [
                                {
                                    "IpAddress": "[parameters('backendIpAddress1')]"
                                }
                            ]
                        }
                    }
                ],
                "backendHttpSettingsCollection": [
                    {
                        "name": "appGatewayBackendHttpSettings",
                        "properties": {
                            "Port": 80,
                            "Protocol": "Http",
                            "CookieBasedAffinity": "Disabled"
                        }
                    }
                ],
                "httpListeners": [
                  {
                    "name": "appGatewayHttpsListener",
                    "properties": {
                      "FrontendIPConfiguration": {
                        "Id": "[concat(variables('applicationGatewayID'), '/frontendIPConfigurations/appGatewayFrontendIP')]"
                      },
                      "FrontendPort": {
                        "Id": "[concat(variables('applicationGatewayID'), '/frontendPorts/appGatewayFrontendPort1')]"
                      },
                      "Protocol": "Https",
                      "SslCertificate": {
                        "Id": "[concat(variables('applicationGatewayID'), '/sslCertificates/appGatewaySslCert')]"
                      }
                    }
                  },
                  {
                        "name": "appGatewayHttpListener",
                        "properties": {
                            "FrontendIPConfiguration": {
                                "Id": "[concat(variables('applicationGatewayID'), '/frontendIPConfigurations/appGatewayFrontendIP')]"
                            },
                            "FrontendPort": {
                                "Id": "[concat(variables('applicationGatewayID'), '/frontendPorts/appGatewayFrontendPort2')]"
                            },
                            "Protocol": "Http"
                        }
                    }
                ],
                "requestRoutingRules": [
                  {
                    "Name": "rule1",
                    "properties": {
                      "RuleType": "Basic",
                      "httpListener": {
                        "id": "[concat(variables('applicationGatewayID'), '/httpListeners/appGatewayHttpListener')]"
                      },
                      "backendAddressPool": {
                        "id": "[concat(variables('applicationGatewayID'), '/backendAddressPools/appGatewayBackendPool')]"
                      },
                      "backendHttpSettings": {
                        "id": "[concat(variables('applicationGatewayID'), '/backendHttpSettingsCollection/appGatewayBackendHttpSettings')]"
                    },
                    "rewriteRuleSet" : {
                        "id" : "[concat(variables('applicationGatewayID'), '/rewriteRuleSets/RewriteRuleSet1')]"
                    }
                    }
                  },
                  {
                        "Name": "rule2",
                        "properties": {
                            "RuleType": "Basic",
                            "httpListener": {
                                "id": "[concat(variables('applicationGatewayID'), '/httpListeners/appGatewayHttpsListener')]"
                            },
                            "backendAddressPool": {
                                "id": "[concat(variables('applicationGatewayID'), '/backendAddressPools/appGatewayBackendPool')]"
                            },
                            "backendHttpSettings": {
                                "id": "[concat(variables('applicationGatewayID'), '/backendHttpSettingsCollection/appGatewayBackendHttpSettings')]"
                            }
                        }
                    }
                ],
                "rewriteRuleSets": [
                    {
                        "name": "RewriteRuleSet1",
                        "properties": {
                            "rewriteRules": [
                                {
                                    "name": "RWRule1",
                                    "actionSet": {
                                        "requestHeaderConfigurations": [
                                            {
                                                "headerName": "hello",
                                                "headerValue": "world"
                                            }
                                        ],
                                        "responseHeaderConfigurations": [
                                            {
                                                "headerName": "Resp-hello",
                                                "headerValue": "world"
                                            }
                                        ]
                                    }
                                }
                            ]
                        },
                        "type": "Microsoft.Network/applicationGateways/rewriteRuleSets"
                    }
                ]   
            }
        }
    ]
}